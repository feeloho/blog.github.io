<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>泰山的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.qazhe.com/"/>
  <updated>2020-01-30T10:22:17.253Z</updated>
  <id>http://www.qazhe.com/</id>
  
  <author>
    <name>泰山</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Scrcpy</title>
    <link href="http://www.qazhe.com/2020/01/30/Scrcpy/"/>
    <id>http://www.qazhe.com/2020/01/30/Scrcpy/</id>
    <published>2020-01-30T09:12:46.000Z</published>
    <updated>2020-01-30T10:22:17.253Z</updated>
    
    <content type="html"><![CDATA[<hr><p>Mac使用<code>Scrcpy</code>远程显示/控制Android手机</p><a id="more"></a><hr><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ul><li>Android 5.0以上</li><li>启用 adb 调试（即 USB 调试）</li></ul><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>安装方法：<a href="https://github.com/Genymobile/scrcpy/blob/master/BUILD.md" target="_blank" rel="noopener">手动安装说明</a>。不用担心，作为 Linux 用户，不难。</p><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>直接下载：</p><ul><li><a href="https://github.com/Genymobile/scrcpy/releases/download/v1.10/scrcpy-win32-v1.10.zip" target="_blank" rel="noopener"><code>scrcpy-win32-v1.10.zip</code></a><br><em>(SHA-256: f98b400b3764404b33b212e9762dd6f1593ddb766c1480fc2609c94768e4a8e1)</em></li><li><a href="https://github.com/Genymobile/scrcpy/releases/download/v1.10/scrcpy-win64-v1.10.zip" target="_blank" rel="noopener"><code>scrcpy-win64-v1.10.zip</code></a><br><em>(SHA-256: 95de34575d873c7e95dfcfb5e74d0f6af4f70b2a5bc6fde0f48d1a05480e3a44)</em></li></ul><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p>需要先安装 <a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a>，然后在终端中运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install scrcpy</span><br><span class="line">brew cask install android-platform-tools</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="USB连接"><a href="#USB连接" class="headerlink" title="USB连接"></a>USB连接</h3><p>连接手机后使用控制台使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrcpy</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/feeloho/image_store/master/img/20200130181809.png" alt="demo"></p><h3 id="Wi-Fi-连接方式"><a href="#Wi-Fi-连接方式" class="headerlink" title="Wi-Fi 连接方式"></a>Wi-Fi 连接方式</h3><p>注意，要使用 Wi-Fi，仍然需要每次先用 USB 连接手机一次，实用性还不是特别高。</p><ol><li>将设备连接到与计算机相同的 Wi-Fi</li><li>获取手机 IP 地址（在设置→关于手机→状态）</li><li>启用 TCP/IP 上的 adb：<em>adb tcpip 5555</em></li><li>连接到您的设备：<em>adb connect 手机IP：5555</em></li><li>拔下手机</li><li>像往常一样运行 scrcpy</li></ol><p>要切换回USB模式：<em>adb usb</em></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;Mac使用&lt;code&gt;Scrcpy&lt;/code&gt;远程显示/控制Android手机&lt;/p&gt;
    
    </summary>
    
    
      <category term="mac" scheme="http://www.qazhe.com/tags/mac/"/>
    
      <category term="andorid" scheme="http://www.qazhe.com/tags/andorid/"/>
    
  </entry>
  
  <entry>
    <title>centos 安装 vsftpd 以及 php 调用遇到的坑</title>
    <link href="http://www.qazhe.com/2019/04/01/centos-%E5%AE%89%E8%A3%85-vsftpd-%E4%BB%A5%E5%8F%8A-php-%E8%B0%83%E7%94%A8%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://www.qazhe.com/2019/04/01/centos-安装-vsftpd-以及-php-调用遇到的坑/</id>
    <published>2019-04-01T08:58:43.000Z</published>
    <updated>2019-05-05T02:24:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>centos 安装 vsftpd 以及 php 调用遇到的坑<br><a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">centsos 7.5</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里我直接使用 yum 的安装方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install vsftpd</span><br></pre></td></tr></table></figure><p>如果需要连接其他 FTP 服务器，则可以安装 FTP 客户端。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ftp</span><br></pre></td></tr></table></figure><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adduser userftp</span><br><span class="line">passwd userftp</span><br><span class="line"><span class="comment"># 禁止用户的 ssh 登录权限，只允许 FTP 访问:</span></span><br><span class="line">usermod -s /sbin/nologin userftp</span><br></pre></td></tr></table></figure><h2 id="配置-VSFTP"><a href="#配置-VSFTP" class="headerlink" title="配置 VSFTP"></a>配置 VSFTP</h2><p>路径: <code>/etc/vsftpd/vsftpd.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不允许匿名用户登录</span></span><br><span class="line">anonymous_enable=NO</span><br><span class="line"><span class="comment"># 允许本地用户登录，即 linux 系统中的用户帐号登录FTP服务器</span></span><br><span class="line">local_enable=YES</span><br><span class="line"><span class="comment"># 是否允许本地用户对 FTP 服务器文件具有写权限</span></span><br><span class="line">write_enable=YES</span><br><span class="line"><span class="comment"># 或其它值，设置本地用户的文件掩码 为缺省022</span></span><br><span class="line">local_umask=022</span><br><span class="line"><span class="comment"># 允许匿名用户上传文件，须将 write_enable=YES</span></span><br><span class="line">anon_upload_enable=YES</span><br><span class="line"><span class="comment"># 允许匿名用户创建新文件夹</span></span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line"><span class="comment"># 激活目录欢迎信息功能</span></span><br><span class="line">dirmessage_enable=YES</span><br><span class="line"><span class="comment"># 系统记录服务器上传和下载情况的日志文件，默认情况该日志文件为/var/log/vsftpd.log，也可以通过下面的 xferlog_file 选项对其进行设定</span></span><br><span class="line">xferlog_enable=YES</span><br><span class="line"><span class="comment"># 设定 FTP 服务器将启用 FTP 数据端口的连接请求 ,ftp-data 数据传输 ，21 为连接控制端口</span></span><br><span class="line">connect_from_port_20=YES</span><br><span class="line"><span class="comment"># 设定是否允许改变上传文件的属主，与下面一个设定项配合使用</span></span><br><span class="line">chown_uploads=YES</span><br><span class="line"><span class="comment"># 设置想要改变的上传文件的属主，如果需要，则输入一个系统用户名，例如可以把上传的文件都改成 root 属主。whoever：任何人</span></span><br><span class="line">chown_username=whoever</span><br><span class="line"><span class="comment"># 设定系统维护记录FTP服务器上传和下载情况的日志文件，/var/log/vsftpd.log是默认的，也可以另设其它</span></span><br><span class="line">xferlog_file=/var/<span class="built_in">log</span>/vsftpd.log</span><br><span class="line"><span class="comment"># 如果启用此选项，传输日志文件将以标准 xferlog 的格式书写，该格式的日志文件默认为/var/log/xferlog，也可以通过xferlog_file选项对其进行设定</span></span><br><span class="line">xferlog_std_format=YES</span><br><span class="line"><span class="comment"># 如果添加并启用此选项，将生成两个相似的日志文件，默认在/var/log/xferlog和/var/log/vsftpd.log目录下。前者是wu_ftpd类型的传输日志，可以利用标准日志工具对其进行分析；后者是vsftpd类型的日志</span></span><br><span class="line">dual_log_enable=YES</span><br><span class="line"><span class="comment"># 如果添加并启用此选项，则原本应该输出到/var/log/vsftpd.log中的日志，将输出到系统日志中</span></span><br><span class="line">syslog_enable=YES</span><br><span class="line"><span class="comment"># 设置数据传输中断间隔时间，此语句表示空闲的用户会话中断时间为600秒，即当数据传输结束后，用户连接FTP服务器的时间不应超过600秒，可以根据实际情况对该值进行修改</span></span><br><span class="line">idle_session_timeout=600</span><br><span class="line"><span class="comment"># 设置数据连接超时时间，该语句表示数据连接超时时间为 120 秒，可根据实际情况对其个修改</span></span><br><span class="line">data_connection_timeout=120</span><br><span class="line"><span class="comment"># 运行 vsftpd 需要的非特权系统用户，缺省是nobody</span></span><br><span class="line">nopriv_user=ftpsecure</span><br><span class="line"><span class="comment"># 如果 FTP client 会下达“async ABOR”这个指令时，这个设定才需要启用，而一般此设定并不安全，所以通常将其取消</span></span><br><span class="line">async_abor_enable=YES</span><br><span class="line"><span class="comment"># 大多数 FTP 服务器都选择用 ASCII 方式传输数据，用 ASCII 方式上传文件</span></span><br><span class="line">ascii_upload_enable=YES</span><br><span class="line"><span class="comment"># 用 ASCII 方式下载文件</span></span><br><span class="line">ascii_download_enable=YES</span><br><span class="line"><span class="comment"># 设置登录FTP服务器时显示的欢迎信息，可以修改=后的欢迎信息内容。另外如在需要设置更改目录欢迎信息的目录下创建名为 .message 的文件，并写入欢迎信息保存后，在进入到此目录会显示自定义欢迎信息</span></span><br><span class="line">ftpd_banner=Welcome to blah FTP service.</span><br><span class="line"><span class="comment"># 可将某些特殊的 email address 抵挡住。如果以anonymous登录服务器时，会要求输入密码，也就是您的email address,如果很讨厌某些email address，就可以使用此设定来取消他的登录权限，但必须与下面的设置项配合</span></span><br><span class="line">deny_email_enable=YES</span><br><span class="line"><span class="comment"># 当上面的 deny_email_enable=YES 时，可以利用这个设定项来规定那个email address不可登录vsftpd服务器，此文件需用户自己创建，一行一个email address即可</span></span><br><span class="line">banned_email_file=/etc/vsftpd/banned_emails</span><br><span class="line"><span class="comment"># 设置为 NO 时，用户登录FTP服务器后具有访问自己目录以外的其他文件的权限，设置为 YES 时，用户被锁定在自己的 home 目录中，vsftpd将在下面 chroot_list_file选项值的位置寻找 chroot_list文件，此文件需用户建立，再将需锁定在自己home目录的用户列入其中，每行一个用户</span></span><br><span class="line">chroot_list_enable=YES</span><br><span class="line"><span class="comment"># 此文件需自己建立，被列入此文件的用户，在登录后将不能切换到自己目录以外的其他目录，由 FTP 服务器自动地 chrooted 到用户自己的home目录下，使得 chroot_list文件中的用户不能随意转到其他用户的FTP home目录下，从而有利于FTP服务器的安全管理和隐私保护</span></span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line"><span class="comment"># 允许递归查询，大型站点的 FTP 服务器启用此项可以方便远程用户查询</span></span><br><span class="line">ls_recurse_enable=YES</span><br><span class="line"><span class="comment"># vsftpd 将以独立模式运行，由vsftpd自己监听和处理连接请求</span></span><br><span class="line">listen=YES</span><br><span class="line"><span class="comment"># 设定支持IPV6</span></span><br><span class="line">listen_ipv6=YES</span><br><span class="line"><span class="comment"># 设置 PAM 外挂模块提供的认证服务所使用的配置文件名，即/etc/pam.d/vsftpd文件，此文件中file=/etc/vsftpd/ftpusers字段，说明了PAM模块能抵挡的帐号内容来自文件/etc/vsftpd/ftpusers中</span></span><br><span class="line">pam_service_name=vsftpd</span><br><span class="line"><span class="comment"># 默认NO，此时ftpusers文件中的用户禁止登录FTP服务器；若此项设为YES，则 user_list文件中的用户允许登录FTP服务器，而如果同时设置了 userlist_deny=YES，则user_list文件中的用户将不允许登录FTP服务器，甚至连输入密码提示信息都没有，直接被FTP服务器拒绝</span></span><br><span class="line">userlist_enable=YES/NO</span><br><span class="line"><span class="comment"># 默认YES，设置是否阻扯user_list文件中的用户登录FTP服务器</span></span><br><span class="line">userlist_deny=YES/NO</span><br><span class="line"><span class="comment"># 表明服务器使用 tcp_wrappers 作为主机访问控制方式，tcp_wrappers可以实现linux系统中网络服务的基于主机地址的访问控制，在/etc目录中的hosts.allow和hosts.deny两个文件用于设置tcp_wrappers的访问控制，前者设置允许访问记录，后者设置拒绝访问记录。例如想限制某些主机对FTP服务器192.168.57.2的匿名访问，编缉/etc/hosts.allow 文件，如在下面增加两行命令：vsftpd:192.168.57.1ENY 和vsftpd:192.168.57.9ENY 表明限制IP为192.168.57.1/192.168.57.9主机访问IP为192.168.57.2的FTP服务器，此时FTP服务器虽可以PING通，但无法连接</span></span><br><span class="line">tcp_wrappers=YES</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对FTP客户机使用FTP服务器资源进行控制</span></span><br><span class="line"><span class="comment"># 设置FTP服务器所允许的最大客户端连接数，值为0时表示不限制。例如max_client=100表示FTP服务器的所有客户端最大连接数不超过100个</span></span><br><span class="line">max_client</span><br><span class="line"><span class="comment"># 设置对于同一IP地址允许的最大客户端连接数，值为0时表示不限制。例如max_per_ip=5表示同一IP地址的FTP客户机与FTP服务器建立的最大连接数不超过5个。 </span></span><br><span class="line">max_per_ip</span><br><span class="line"><span class="comment"># 设置本地用户的最大传输速率，单位为B/s，值为0时表示不限制。例如local_max_rate=500000表示FTP服务器的本地用户最大传输速率设置为500KB/s. </span></span><br><span class="line">local_max_rate</span><br><span class="line"><span class="comment"># 设置匿名用户的最大传输速率，单位为B/s,值为0表示不限制。例如ano_max_rate=200000，表示FTP服务器的匿名用户最大传输速率设置为200KB/s.</span></span><br><span class="line">anon_max_rate</span><br><span class="line"><span class="comment"># 解决时间不一致</span></span><br><span class="line">use_localtime=YES</span><br></pre></td></tr></table></figure><p>指定用户访问指定目录c<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">用户相关操作</span><br><span class="line">useradd -d /web-data/production-ftp -g ftp -s /sbin/nologin onelooks</span><br><span class="line">设置密码</span><br><span class="line">passwd onelooks</span><br><span class="line">用户删除</span><br><span class="line">userdel -r onelooks</span><br><span class="line"></span><br><span class="line">与该功能相关的选项主要包括：</span><br><span class="line">chroot_local_user</span><br><span class="line">chroot_list_enable</span><br><span class="line">chroot_list_file</span><br><span class="line">可以通过如下两种方法来设置chroot，从而杜绝上述不安全的情况发生：</span><br><span class="line">chroot_local_user=NO</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">设置后，只有/etc/vsftpd.chroot_list文件中指定的用户不能返回上一层文件夹</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">设置后，只有/etc/vsftpd.chroot_list文件中指定的用户可以返回上一层</span><br><span class="line">500 错误 可添加配置设置根目录写权限</span><br><span class="line">allow_writeable_chroot=YES</span><br></pre></td></tr></table></figure></p><p>启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service vsftpd start|stop|restart</span><br></pre></td></tr></table></figure><p>这里ftp服务器基本安装完成了, 下面怎么用php去连接它, 这也是我遇到的坑</p><h2 id="php使用"><a href="#php使用" class="headerlink" title="php使用"></a>php使用</h2><p>php提供了ftp的扩展, 直接编译安装就行了, <a href="https://www.jianshu.com/p/cfc9c044f886" target="_blank" rel="noopener">编译安装php-FTP扩展</a></p><p>下面是最坑的时候…</p><p>php上传文件的时候一直报<code>ftp_put(): Failed to establish connection.</code> 问题原因分析:</p><ol><li>防火墙, 阿里的安全组规则都开放21端口的访问, 如果 ftp 是主动模式就打开20端口,  被动模式则就打开<code>pasv_min_port</code>和<code>pasv_max_port</code>之间的端口</li><li>目录权限问题</li><li>ftp 配置<code>ascii_upload_enable</code>没有打开, 这个就是我导致错误的问题-_-!!!!</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;centos 安装 vsftpd 以及 php 调用遇到的坑&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>centos yum 安装mysql</title>
    <link href="http://www.qazhe.com/2019/02/02/centos-yum-%E5%AE%89%E8%A3%85mysql/"/>
    <id>http://www.qazhe.com/2019/02/02/centos-yum-安装mysql/</id>
    <published>2019-02-02T10:24:19.000Z</published>
    <updated>2019-03-01T11:11:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS 安装Mysql 5.7<br><a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Linux版本：4.1.5-1.el7.centos.x86_64 (通过命令uname -a查看)</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum</span><br></pre></td></tr></table></figure><h3 id="安装源文件"><a href="#安装源文件" class="headerlink" title="安装源文件"></a>安装源文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql-community-server-5.7.18-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="官网下载对应版本"><a href="#官网下载对应版本" class="headerlink" title="官网下载对应版本"></a>官网下载对应版本</h3><p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">官网下载 : MySQL Community Server 5.7.18</a><br>选择Select Operating System -&gt; Red Hat Enterprise Linux / Oracle Linux，由于自己Linux版本为4.1.5-1.el7.centos.x86_64，即: el7，所以选择：mysql-community-server-5.7.18-1.el7.x86_64.rpm 下载</p><h3 id="yum设置"><a href="#yum设置" class="headerlink" title="yum设置"></a>yum设置</h3><ul><li><a href="https://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">官网下载 : RPM Package</a><br>选择mysql57-community-release-el7-10.noarch.rpm，下载，根据<a href="https://link.jianshu.com/?t=https://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/" target="_blank" rel="noopener">A Quick Guide to Using the MySQL Yum Repository</a>设置yum</li><li><p>添加Mysql Yum Repository</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -Uvh mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure></li><li><p>选择版本</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先看yum可以安装的mysql版本</span></span><br><span class="line">yum repolist all | grep mysql</span><br><span class="line"><span class="comment"># 可以通过编辑 /etc/yum.repos.d/mysql-community.repo文件进行修改安装版本</span></span><br><span class="line"><span class="comment"># 如果我们希望安装mysql 5.7版本，则需要把mysql 5.6版本取消，方法如下：</span></span><br><span class="line">vi  /etc/yum.repos.d/mysql-community.repo</span><br><span class="line"><span class="comment"># 修改mysql-community.repo如下部分</span></span><br><span class="line"><span class="comment">#将enabled设置为1，即安装5.7版本</span></span><br><span class="line">[mysql57-community]</span><br><span class="line">name=MySQL 5.7 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/6/<span class="variable">$basearch</span>/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable to use MySQL 5.6 , 将enabled设置为0，即不安装5.6版本</span></span><br><span class="line">[mysql56-community]</span><br><span class="line">name=MySQL 5.6 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/6/<span class="variable">$basearch</span>/</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure><h3 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h3><ul><li><p>yum安装下载的mysql-community-server-5.7.18-1.el7.x86_64.rpm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install mysql-community-server</span><br></pre></td></tr></table></figure></li><li><p>安装完毕-&gt;启动mysql</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysqld start </span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过如下命令找到mysql root 初始密码</span></span><br><span class="line">sudo grep <span class="string">'temporary password'</span> /var/<span class="built_in">log</span>/mysqld.log </span><br><span class="line"><span class="comment"># 登录mysql</span></span><br></pre></td></tr></table></figure><p><a href="https://link.jianshu.com/?t=https://dev.mysql.com/doc/refman/5.7/en/linux-installation-rpm.html" target="_blank" rel="noopener">详见: 官网</a><br>登录mysql，修改密码（密码设置简单也会报错）<br>修改密码 : mysql 5.7和mysql 5.6修改密码命令不太相同，具体<a href="https://link.jianshu.com/?t=http://blog.itpub.net/29773961/viewspace-2077579/" target="_blank" rel="noopener">参见链接</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p&#123;初始随机密码&#125;</span><br><span class="line"><span class="comment"># 注意：此事必须修改密码才能正常使用mysql，否则任何操作都会报错</span></span><br><span class="line"><span class="comment"># 修改密码 : mysql 5.7和mysql 5.6修改密码命令不太相同</span></span><br><span class="line"><span class="comment"># 官方建议修改密码命令如下：</span></span><br><span class="line">ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'new_password_复杂点的密码'</span>;</span><br></pre></td></tr></table></figure></p><h3 id="mysql远程登录"><a href="#mysql远程登录" class="headerlink" title="mysql远程登录"></a>mysql远程登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 假设有A和B两台机器，都安装有mysql，现在设置B机器可远程访问A机器mysql，配置方法如下：</span></span><br><span class="line"><span class="comment"># 进入机器A的mysql root账户，设置允许其他机器通过root账户远程访问本机mysql</span></span><br><span class="line">use mysql</span><br><span class="line">GRANT ALL ON *.* to root@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'your-root-password'</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以上设置成功后，可以从B机器上远程登录本机mysql，输入下面命令，可远程访问机器A：</span></span><br><span class="line">mysql -hA机器IP  -uroot  -pA机器root账户密码</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS 安装Mysql 5.7&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux iptables配置</title>
    <link href="http://www.qazhe.com/2018/10/23/Linux-iptables%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.qazhe.com/2018/10/23/Linux-iptables配置/</id>
    <published>2018-10-23T14:50:57.000Z</published>
    <updated>2018-10-23T15:06:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>在服务器中开启防火墙可以有效一些避免端口扫描和黑客攻击,所以配置iptables是非常有必要的.今天记录一下配置过程<br><a id="more"></a></p><h2 id="检查是否启动iptables"><a href="#检查是否启动iptables" class="headerlink" title="检查是否启动iptables"></a>检查是否启动iptables</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service iptables status</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">/etc/init.d/iptables status</span><br></pre></td></tr></table></figure><p>如果显示如下，则说明iptables服务是有安装的，但是没有启动服务。<br>如果没有安装的话可以直接yum安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables: Firewall is not running.</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y iptables</span><br></pre></td></tr></table></figure><p>生成配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure></p><p>启动iptables<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service iptables start</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">/etc/init.d/iptables start</span><br><span class="line">iptables: Applying firewall rules:                         [  OK  ]</span><br></pre></td></tr></table></figure></p><p>查看当前iptables的配置情况<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n</span><br><span class="line"><span class="comment">#会显示如下</span></span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br></pre></td></tr></table></figure></p><p>如果显示这样就说明iptables服务已经启动了</p><h2 id="配置规则"><a href="#配置规则" class="headerlink" title="配置规则"></a>配置规则</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#允许对外请求的返回包</span></span><br><span class="line">iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line"><span class="comment">#允许icmp包通过</span></span><br><span class="line">iptables -A INPUT -p icmp --icmp-type any -j ACCEPT</span><br><span class="line"><span class="comment">#允许来自于lo接口的数据包，如果没有此规则，将不能通过127.0.0.1访问本地服务</span></span><br><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment">#常用端口</span></span><br><span class="line">iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 23 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 8080 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤所有非以上规则的请求</span></span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果要添加内网ip信任（接受其所有TCP请求）</span></span><br><span class="line"><span class="comment">#注：(**.**.**.**)为IP,下同</span></span><br><span class="line">iptables -A INPUT -p tcp -s **.**.**.** -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment">#要封停一个IP，使用下面这条命令</span></span><br><span class="line">iptables -I INPUT -s **.**.**.** -j DROP</span><br><span class="line"><span class="comment">#要解封一个IP，使用下面这条命令</span></span><br><span class="line">iptables -D INPUT -s **.**.**.** -j DROP</span><br></pre></td></tr></table></figure><p>保存重启防火墙<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/iptables save</span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure></p><p>其他方法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开配置文件</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"><span class="comment"># 加入如下语句:</span></span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</span><br><span class="line"><span class="comment"># 保存（按Esc退出编辑）</span></span><br><span class="line">:wq</span><br><span class="line"><span class="comment"># 重启防火墙，修改完成</span></span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure></p><p>其他常用命令（不是一定要做）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#允许所有入栈规则</span></span><br><span class="line">iptables -P INPUT ACCEPT</span><br><span class="line"><span class="comment">#清空默认所有规则</span></span><br><span class="line">iptables -F</span><br><span class="line"><span class="comment">#清空自定义的所有规则</span></span><br><span class="line">iptables -X</span><br><span class="line"><span class="comment">#计数器置0</span></span><br><span class="line">iptables -Z</span><br></pre></td></tr></table></figure></p><h2 id="关闭端口"><a href="#关闭端口" class="headerlink" title="关闭端口"></a>关闭端口</h2><p>常用删除端口规则<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前端口所在行数</span></span><br><span class="line">iptables -L -n --line-number</span><br><span class="line"><span class="comment"># 删除指定序列的端口（下面是删除第五条端口）</span></span><br><span class="line">iptables -D INPUT 5</span><br><span class="line"><span class="comment"># 确认是否已经删除，可以重新查看列表</span></span><br><span class="line">iptables -L -n --line-number</span><br></pre></td></tr></table></figure></p><p>其他方法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开配置文件</span></span><br><span class="line">vim /etc/sysconfig/iptables </span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接删除对应端口的那句 ！！！！</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存（按Esc退出编辑）</span></span><br><span class="line">:wq</span><br><span class="line"><span class="comment"># 重启防火墙，修改完成</span></span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure></p><p>保存规则，重启iptables服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#保存修改</span></span><br><span class="line">/etc/init.d/iptables save</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看规则是否添加成功</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加到iptables服务自启动</span></span><br><span class="line">chkconfig iptables on</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启iptables服务</span></span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在服务器中开启防火墙可以有效一些避免端口扫描和黑客攻击,所以配置iptables是非常有必要的.今天记录一下配置过程&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>supervisor的使用与管理</title>
    <link href="http://www.qazhe.com/2018/10/08/supervisor%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E7%AE%A1%E7%90%86/"/>
    <id>http://www.qazhe.com/2018/10/08/supervisor的使用与管理/</id>
    <published>2018-10-08T08:49:54.000Z</published>
    <updated>2018-10-08T09:21:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>Supervisor <a href="http://supervisord.org/" target="_blank" rel="noopener">http://supervisord.org/</a>是用Python开发的一个client/server服务，是Linux/Unix系统下的一个进程管理工具，不支持Windows系统。它可以很方便的监听、启动、停止、重启一个或多个进程。用Supervisor管理的进程，当一个进程意外被杀死，supervisort监听到进程死后，会自动将它重新拉起，很方便的做到进程自动恢复的功能，不再需要自己写shell脚本来控制。<br><a id="more"></a></p><h2 id="安装Python-pip-安装"><a href="#安装Python-pip-安装" class="headerlink" title="安装Python pip 安装"></a>安装Python pip 安装</h2><p>python 第三方包的安装方法，此处不详细描述<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install supervisor</span><br></pre></td></tr></table></figure></p><h2 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h2><p>supervisor的配置参数较多，下面介绍一下常用的参数配置，详细的配置及说明，请参考官方文档介绍。<br>注：分号（;）开头的配置表示注释<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[unix_http_server]</span><br><span class="line">file=/tmp/supervisor.sock   ;UNIX socket 文件，supervisorctl 会使用</span><br><span class="line">;chmod=0700                 ;socket文件的mode，默认是0700</span><br><span class="line">;chown=nobody:nogroup       ;socket文件的owner，格式：uid:gid</span><br><span class="line"> </span><br><span class="line">;[inet_http_server]         ;HTTP服务器，提供web管理界面</span><br><span class="line">;port=127.0.0.1:9001        ;Web管理后台运行的IP和端口，如果开放到公网，需要注意安全性</span><br><span class="line">;username=user              ;登录管理后台的用户名</span><br><span class="line">;password=123               ;登录管理后台的密码</span><br><span class="line"> </span><br><span class="line">[supervisord]</span><br><span class="line">logfile=/tmp/supervisord.log ;日志文件，默认是 <span class="variable">$CWD</span>/supervisord.log</span><br><span class="line">logfile_maxbytes=50MB        ;日志文件大小，超出会rotate，默认 50MB，如果设成0，表示不限制大小</span><br><span class="line">logfile_backups=10           ;日志文件保留备份数量默认10，设为0表示不备份</span><br><span class="line">loglevel=info                ;日志级别，默认info，其它: debug,warn,trace</span><br><span class="line">pidfile=/tmp/supervisord.pid ;pid 文件</span><br><span class="line">nodaemon=<span class="literal">false</span>               ;是否在前台启动，默认是<span class="literal">false</span>，即以 daemon 的方式启动</span><br><span class="line">minfds=1024                  ;可以打开的文件描述符的最小值，默认 1024</span><br><span class="line">minprocs=200                 ;可以打开的进程数的最小值，默认 200</span><br><span class="line"> </span><br><span class="line">[supervisorctl]</span><br><span class="line">serverurl=unix:///tmp/supervisor.sock ;通过UNIX socket连接supervisord，路径与unix_http_server部分的file一致</span><br><span class="line">;serverurl=http://127.0.0.1:9001 ; 通过HTTP的方式连接supervisord</span><br><span class="line"> </span><br><span class="line">; [program:xx]是被管理的进程配置参数，xx是进程的名称</span><br><span class="line">[program:xx]</span><br><span class="line"><span class="built_in">command</span>=/opt/apache-tomcat-8.0.35/bin/catalina.sh run  ; 程序启动命令</span><br><span class="line">autostart=<span class="literal">true</span>       ; 在supervisord启动的时候也自动启动</span><br><span class="line">startsecs=10         ; 启动10秒后没有异常退出，就表示进程正常启动了，默认为1秒</span><br><span class="line">autorestart=<span class="literal">true</span>     ; 程序退出后自动重启,可选值：[unexpected,<span class="literal">true</span>,<span class="literal">false</span>]，默认为unexpected，表示进程意外杀死后才重启</span><br><span class="line">startretries=3       ; 启动失败自动重试次数，默认是3</span><br><span class="line">user=tomcat          ; 用哪个用户启动进程，默认是root</span><br><span class="line">priority=999         ; 进程启动优先级，默认999，值小的优先启动</span><br><span class="line">redirect_stderr=<span class="literal">true</span> ; 把stderr重定向到stdout，默认<span class="literal">false</span></span><br><span class="line">stdout_logfile_maxbytes=20MB  ; stdout 日志文件大小，默认50MB</span><br><span class="line">stdout_logfile_backups = 20   ; stdout 日志文件备份数，默认是10</span><br><span class="line">; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）</span><br><span class="line">stdout_logfile=/opt/apache-tomcat-8.0.35/logs/catalina.out</span><br><span class="line">stopasgroup=<span class="literal">false</span>     ;默认为<span class="literal">false</span>,进程被杀死时，是否向这个进程组发送stop信号，包括子进程</span><br><span class="line">killasgroup=<span class="literal">false</span>     ;默认为<span class="literal">false</span>，向进程组发送<span class="built_in">kill</span>信号，包括子进程</span><br><span class="line"> </span><br><span class="line">;包含其它配置文件</span><br><span class="line">[include]</span><br><span class="line">files = relative/directory/*.ini    ;可以指定一个或多个以.ini结束的配置文件</span><br></pre></td></tr></table></figure></p><p>include示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[include]</span><br><span class="line">files = /opt/absolute/filename.ini /opt/absolute/*.ini foo.conf config??.ini</span><br></pre></td></tr></table></figure></p><h2 id="配置管理进程"><a href="#配置管理进程" class="headerlink" title="配置管理进程"></a>配置管理进程</h2><p>进程管理配置参数，不建议全都写在supervisord.conf文件中，应该每个进程写一个配置文件放在include指定的目录下包含进supervisord.conf文件中</p><ul><li>创建/etc/supervisor/config.d目录，用于存放进程管理的配置文件 </li><li>修改/etc/supervisor/supervisord.conf中的include参数，将/etc/supervisor/conf.d目录添加到include中<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[include]</span><br><span class="line">files = /etc/supervisor/config.d/*.ini</span><br></pre></td></tr></table></figure></li></ul><h2 id="启动Supervisor服务"><a href="#启动Supervisor服务" class="headerlink" title="启动Supervisor服务"></a>启动Supervisor服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisord -c /etc/supervisor/supervisord.conf</span><br></pre></td></tr></table></figure><h2 id="Supervisorctl"><a href="#Supervisorctl" class="headerlink" title="Supervisorctl"></a>Supervisorctl</h2><p>supervisord启动成功后，可以通过supervisorctl客户端控制进程，启动、停止、重启。运行supervisorctl命令，不加参数，会进入supervisor客户端的交互终端，并会列出当前所管理的所有进程<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supervisorctl -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure></p><p>若成功，则会进入supervisorctl的shell界面，有以下方法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">status    <span class="comment"># 查看程序状态</span></span><br><span class="line">stop xxx   <span class="comment"># 关闭 update_ip 程序</span></span><br><span class="line">start xxx  <span class="comment"># 启动 update_ip 程序</span></span><br><span class="line">restart xxx    <span class="comment"># 重启 update_ip 程序</span></span><br><span class="line">reread    ＃ 读取有更新（增加）的配置文件，不会启动新添加的程序</span><br><span class="line">update    ＃ 重启配置文件修改过的程序</span><br></pre></td></tr></table></figure></p><p>执行相关操作后，可以在web端看到具体的变化情况，如stop 程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stop xxx</span><br></pre></td></tr></table></figure></p><h2 id="Web管理界面"><a href="#Web管理界面" class="headerlink" title="Web管理界面"></a>Web管理界面</h2><p>出于安全考虑，默认配置是没有开启web管理界面，需要修改supervisord.conf配置文件打开http访权限，将下面的配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;[inet_http_server]         ; inet (TCP) server disabled by default;port=127.0.0.1:9001        ; (ip_address:port specifier, *:port <span class="keyword">for</span> all iface);username=user              ; (default is no username (open server));password=123               ; (default is no password (open server))</span><br></pre></td></tr></table></figure></p><h2 id="开机启动Supervisor服务"><a href="#开机启动Supervisor服务" class="headerlink" title="开机启动Supervisor服务"></a>开机启动Supervisor服务</h2><h3 id="配置systemctl服务"><a href="#配置systemctl服务" class="headerlink" title="配置systemctl服务"></a>配置systemctl服务</h3><p>进入/lib/systemd/system目录，并创建supervisor.service文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">;[inet_http_server]         ; inet (TCP) server disabled by default</span><br><span class="line">;port=127.0.0.1:9001        ; (ip_address:port specifier, *:port <span class="keyword">for</span> all iface)</span><br><span class="line">;username=user              ; (default is no username (open server))</span><br><span class="line">;password=123               ; (default is no password (open server))</span><br></pre></td></tr></table></figure></p><p>设置开机启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> supervisor.service</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></p><p>修改文件权限为766<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 766 supervisor.service</span><br></pre></td></tr></table></figure></p><h3 id="配置service类型服务"><a href="#配置service类型服务" class="headerlink" title="配置service类型服务"></a>配置service类型服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash## supervisord   This scripts turns supervisord on## Author:       Mike McGrath &lt;mmcgrath@redhat.com&gt; (based off yumupdatesd)## chkconfig:    - 95 04## description:  supervisor is a process control utility.  It has a web based#               xmlrpc interface as well as a few other nifty features.# processname:  supervisord# config: /etc/supervisor/supervisord.conf# pidfile: /var/run/supervisord.pid# # source function library. /etc/rc.d/init.d/functions RETVAL=0 start() &#123;    echo -n $"Starting supervisord: "    daemon "supervisord -c /etc/supervisor/supervisord.conf "    RETVAL=$?    echo    [ $RETVAL -eq 0 ] &amp;&amp; touch /var/lock/subsys/supervisord&#125; stop() &#123;    echo -n $"Stopping supervisord: "    killproc supervisord    echo    [ $RETVAL -eq 0 ] &amp;&amp; rm -f /var/lock/subsys/supervisord&#125; restart() &#123;    stop    start&#125; case "$1" in  start)    start    ;;  stop)     stop    ;;  restart|force-reload|reload)    restart    ;;  condrestart)    [ -f /var/lock/subsys/supervisord ] &amp;&amp; restart    ;;  status)    status supervisord    RETVAL=$?    ;;  *)    echo $"Usage: $0 &#123;start|stop|status|restart|reload|force-reload|condrestart&#125;"    exit 1esac exit $RETVAL</span></span><br></pre></td></tr></table></figure><p>将上述脚本内容保存到/etc/rc.d/init.d/supervisor文件中，修改文件权限为755，并设置开机启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /etc/rc.d/init.d/supervisor</span><br><span class="line">chkconfig supervisor on</span><br></pre></td></tr></table></figure></p><p>注意：修改脚本中supervisor配置文件路径为你的supervisor的配置文件路径</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Supervisor &lt;a href=&quot;http://supervisord.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://supervisord.org/&lt;/a&gt;是用Python开发的一个client/server服务，是Linux/Unix系统下的一个进程管理工具，不支持Windows系统。它可以很方便的监听、启动、停止、重启一个或多个进程。用Supervisor管理的进程，当一个进程意外被杀死，supervisort监听到进程死后，会自动将它重新拉起，很方便的做到进程自动恢复的功能，不再需要自己写shell脚本来控制。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux Deploy:在Android上部署Linux</title>
    <link href="http://www.qazhe.com/2018/10/01/Linux-Deploy-%E5%9C%A8Android%E4%B8%8A%E9%83%A8%E7%BD%B2Linux/"/>
    <id>http://www.qazhe.com/2018/10/01/Linux-Deploy-在Android上部署Linux/</id>
    <published>2018-10-01T13:16:49.000Z</published>
    <updated>2018-10-01T13:31:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>android上部署linux服务器, 这里写这篇文章记录安装步骤<br><a id="more"></a></p><h2 id="安装-BusyBoxPro"><a href="#安装-BusyBoxPro" class="headerlink" title="安装 BusyBoxPro"></a>安装 BusyBoxPro</h2><p>github地址: <a href="https://github.com/meefik/busybox" target="_blank" rel="noopener">https://github.com/meefik/busybox</a></p><p>BusyBoxPro来扩展linux命令集，需要root，如果是小米的话需要解锁system分区。打开BusyBoxPro，授予root权限</p><h2 id="用LinuxDeploy开始安装linux"><a href="#用LinuxDeploy开始安装linux" class="headerlink" title="用LinuxDeploy开始安装linux"></a>用LinuxDeploy开始安装linux</h2><p>github: <a href="https://github.com/meefik/linuxdeploy" target="_blank" rel="noopener">https://github.com/meefik/linuxdeploy</a></p><h3 id="安装LinuxDeploy并授予root权限"><a href="#安装LinuxDeploy并授予root权限" class="headerlink" title="安装LinuxDeploy并授予root权限"></a>安装LinuxDeploy并授予root权限</h3><p><img src="http://pfpdww7l9.bkt.clouddn.com/15384002311620hhab25u.png?imageslim" alt="paste image"></p><h3 id="添加配置文件并设置属性"><a href="#添加配置文件并设置属性" class="headerlink" title="添加配置文件并设置属性"></a>添加配置文件并设置属性</h3><p>点击软件的左上角，在出现的菜单栏里点配置文件，再点➕创建新的配置文件，名称随意。创建完之后选中新建后的配置文件<br><img src="http://pfpdww7l9.bkt.clouddn.com/1538400274069imz4yo52.png?imageslim" alt="paste image"><br>建议都创建一个新的配置文件，这样出错的时候删除配置文件和系统就行了</p><p>Containerization method  //默认的就行<br>chroot</p><p>发行版    //根据自己的需要选择<br>CentOS</p><p>架构（Architecture）</p><p>这个我建议根据自己的手机CPU的架构来选择，不知道的可以在软件的主界面点右上角的按钮,选择状态<br><img src="http://pfpdww7l9.bkt.clouddn.com/1538400410378pj27ys7o.png?imageslim" alt="paste image"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[17:11:48] &gt;&gt;&gt; status</span><br><span class="line">[17:11:49] Device: MI 6</span><br><span class="line">[17:11:49] Android: 7.1.1</span><br><span class="line">[17:11:49] Architecture: aarch64           //这个就是架构</span><br><span class="line">[17:11:49] Kern el: 4.4.21-perf-g6a9ee37d-06151-g05a843</span><br></pre></td></tr></table></figure></p><p>还有就是如果选择Ubuntu时架构里没有这个aarch64，CPU是64位的就选择arm64，32位的就是arm，正常情况下是这样的，毕竟还有一些x86的CPU。<br>发行版版本(Distribution suit)：根据需要选择</p><p>源地址Source path ：选择了发行版后会自动填写为官方的源，可以换成其他源，也可以换成文件地址，用本地镜像或者Repository下载的系统包来安装。</p><p>安装类型：通常选择文件和目录两种方式。其中文件是创建一个img文件来当做系统的磁盘，目录的话是在这个软件的操作系统环境下创建一个目录直接存放系统文件。我建议如果不是建站的话选择文件，要存储东西或者建网站并且手机/date目录存储空间够的话可以选择目录。不过，就我安装了这么多次之后总结出来一条：选择目录出现错误的次数比选择文件的要多的多。出现错误最多的就是ssh没安装好。</p><p>安装路径：如果选择的是文件，那么这一项默认的是$EXTERNA<br>L_STORAGE:/linux.img，也就是/sdcard/linux.img。它是你的手机存储目录，你也可以指定任何一个存储路径；如果选择的是目录，那么它默认的是${ENV_DIR}/rootfs/linux。关于这个路径，最好不要更改，否则出现错误的几率会大大增加。</p><p>镜像大小和文件系统：如果选择的是文件，会让你选择这两项。文件大小最大2048M，也就是2G，文件系统选择自动就行。</p><p>用户名和密码：就是你之后用来登陆SSH的，自己随意填。</p><p>DNS服务器：可以不填，如果有需要可以填，个人比较倾向阿里的DNS，谷歌的也可以。</p><p>本地化：点开可以选择，中文的话就是zh_CN.UTF-8，英文的是en_US.UTF-8</p><p>下面那个MOUNTS如果勾选Enable的话要填写一个挂载点，比如/mnt/android，这样可以在Linux里访问手机存储里的内容了。</p><p>SSH这个必选吧，勾选之后就可以了。</p><p>图形界面：如果有需要可以勾选。</p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><p>配置完属性后就回到软件主界面，点击右上角按钮，选择安装，然后就会出现&gt;&gt;&gt;depoly</p><p>………………</p><p>………………</p><p>再一次出现&lt;&lt;&lt;depoly说明安装成功。这个过程的快慢看源地址的设置。如果设置的是网络上的源，会很慢，如果是本地的镜像很快就搞定了。</p><h3 id="启动Linux和停止"><a href="#启动Linux和停止" class="headerlink" title="启动Linux和停止"></a>启动Linux和停止</h3><p>安装完之后就可以点开始了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[18:06:24] &gt;&gt;&gt; start</span><br><span class="line">[18:06:25] Checking file system ... <span class="keyword">done</span></span><br><span class="line">[18:06:25] Mounting partitions: </span><br><span class="line">[18:06:25] / ... <span class="keyword">done</span></span><br><span class="line">[18:06:25] /proc ... <span class="keyword">done</span></span><br><span class="line">[18:06:25] /sys ... <span class="keyword">done</span></span><br><span class="line">[18:06:25] /sys/fs/selinux ... <span class="keyword">done</span></span><br><span class="line">[18:06:25] /dev ... <span class="keyword">done</span></span><br><span class="line">[18:06:25] /dev/pts ... <span class="keyword">done</span></span><br><span class="line">[18:06:25] /dev/shm ... <span class="keyword">done</span></span><br><span class="line">[18:06:25] :: Configuring core/mnt ... </span><br><span class="line">[18:06:25] :: Configuring core/net ... </span><br><span class="line">[18:06:26] :: Starting extra/ssh ... <span class="keyword">done</span></span><br><span class="line">[18:06:26] &lt;&lt;&lt; start</span><br></pre></td></tr></table></figure></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>上面说了一个ssh启动失败的问题，还有一个问题就是如果在安装的过程中出现<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[23:14:55] &gt;&gt;&gt; deploy</span><br><span class="line">[23:14:56] <span class="comment">## bootstrap/rootfs : do_install &amp;&amp; do_configure</span></span><br><span class="line">[23:14:56] The container is already mounted.</span><br><span class="line">[23:14:56] &lt;&lt;&lt; deploy</span><br></pre></td></tr></table></figure></p><p>其实这个很好解决，就是你已经启动了一个Linux系统，所以要点一下停止然后再安装。</p><p>本人暂时只遇到这一个问题, 如果有其它问题请联系本人, 共同折腾 (<em>^__^</em>) 嘻嘻</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;android上部署linux服务器, 这里写这篇文章记录安装步骤&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iptables</title>
    <link href="http://www.qazhe.com/2018/09/29/Linux%E4%B8%8Biptables%E9%98%B2%E7%81%AB%E5%A2%99%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>http://www.qazhe.com/2018/09/29/Linux下iptables防火墙配置详解/</id>
    <published>2018-09-29T09:56:00.000Z</published>
    <updated>2018-09-29T09:58:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux下iptables防火墙配置详解<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux下iptables防火墙配置详解&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.qazhe.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.qazhe.com/tags/linux/"/>
    
      <category term="iptables" scheme="http://www.qazhe.com/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>nginx-config</title>
    <link href="http://www.qazhe.com/2018/09/29/nginx-config/"/>
    <id>http://www.qazhe.com/2018/09/29/nginx-config/</id>
    <published>2018-09-29T06:13:00.000Z</published>
    <updated>2018-09-29T06:27:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>nginx 配置基础解释, 以后可能做一些更新<br><a id="more"></a></p><h2 id="nginx-基本配置"><a href="#nginx-基本配置" class="headerlink" title="nginx 基本配置"></a>nginx 基本配置</h2><h3 id="定义Nginx运行的用户和用户组-系统中必须有此用户-可以是nologin"><a href="#定义Nginx运行的用户和用户组-系统中必须有此用户-可以是nologin" class="headerlink" title="定义Nginx运行的用户和用户组,系统中必须有此用户,可以是nologin"></a>定义Nginx运行的用户和用户组,系统中必须有此用户,可以是nologin</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user www www;</span><br></pre></td></tr></table></figure><h3 id="启动进程-通常设置成和cpu的数量相等"><a href="#启动进程-通常设置成和cpu的数量相等" class="headerlink" title="启动进程,通常设置成和cpu的数量相等"></a>启动进程,通常设置成和cpu的数量相等</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  1;</span><br></pre></td></tr></table></figure><h3 id="全局错误日志及PID文件"><a href="#全局错误日志及PID文件" class="headerlink" title="全局错误日志及PID文件"></a>全局错误日志及PID文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log; <span class="comment">#错误日志定义等级，[ debug | info | notice | warn | error | crit ]</span></span><br><span class="line"> pid        /var/run/nginx.pid;</span><br></pre></td></tr></table></figure><p>一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（系统的值ulimit -n）与nginx进程数相除，但是nginx分配请求并不均匀，所以建议与ulimit -n的值保持一致。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">worker_rlimit_nofile 65535;</span><br></pre></td></tr></table></figure></p><h3 id="工作模式及连接数上限"><a href="#工作模式及连接数上限" class="headerlink" title="工作模式及连接数上限"></a>工作模式及连接数上限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    use   epoll;             <span class="comment">#epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能</span></span><br><span class="line">    worker_connections  1024;<span class="comment">#单个后台worker process进程的最大并发链接数 （最大连接数=连接数*进程数）</span></span><br><span class="line">    <span class="comment"># multi_accept on; </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设定http服务器，利用它的反向代理功能提供负载均衡支持"><a href="#设定http服务器，利用它的反向代理功能提供负载均衡支持" class="headerlink" title="设定http服务器，利用它的反向代理功能提供负载均衡支持"></a>设定http服务器，利用它的反向代理功能提供负载均衡支持</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"><span class="comment">#设定mime类型,类型由mime.type文件定义</span></span><br><span class="line">include       /etc/nginx/mime.types;</span><br><span class="line">default_type  application/octet-stream;</span><br><span class="line"><span class="comment">#设定日志格式</span></span><br><span class="line">access_log    /var/<span class="built_in">log</span>/nginx/access.log;</span><br><span class="line"><span class="comment">#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，</span></span><br><span class="line"><span class="comment">#必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.</span></span><br><span class="line">sendfile        on;</span><br><span class="line"><span class="comment">#tcp_nopush     on;</span></span><br><span class="line"><span class="comment">#连接超时时间</span></span><br><span class="line"><span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">keepalive_timeout  65;</span><br><span class="line">tcp_nodelay        on;</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启gzip压缩</span></span><br><span class="line">gzip  on;</span><br><span class="line">gzip_disable <span class="string">"MSIE [1-6]\.(?!.*SV1)"</span>;</span><br><span class="line"><span class="comment">#设定请求缓冲</span></span><br><span class="line">client_header_buffer_size    1k;</span><br><span class="line">large_client_header_buffers  4 4k;</span><br><span class="line"><span class="comment">#包含其它配置文件，如自定义的虚拟主机</span></span><br><span class="line">include /etc/nginx/conf.d/*.conf;</span><br><span class="line">include /etc/nginx/sites-enabled/*;</span><br></pre></td></tr></table></figure><h3 id="虚拟主机配置"><a href="#虚拟主机配置" class="headerlink" title="虚拟主机配置"></a>虚拟主机配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    <span class="comment">#侦听80端口</span></span><br><span class="line">    listen       80;</span><br><span class="line">    <span class="comment">#定义使用www.xx.com访问</span></span><br><span class="line">    server_name  www.xx.com;</span><br><span class="line">    <span class="comment">#设定本虚拟主机的访问日志</span></span><br><span class="line">    access_log  logs/www.xx.com.access.log  main;</span><br><span class="line">    <span class="comment">#默认请求</span></span><br><span class="line">    location / &#123;</span><br><span class="line">          root   /root;      <span class="comment">#定义服务器的默认网站根目录位置</span></span><br><span class="line">          index index.php index.html index.htm;   <span class="comment">#定义首页索引文件的名称</span></span><br><span class="line">          fastcgi_pass  www.xx.com;</span><br><span class="line">          fastcgi_param  SCRIPT_FILENAME  <span class="variable">$document_root</span>/<span class="variable">$fastcgi_script_name</span>; </span><br><span class="line">          include /etc/nginx/fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 定义错误提示页面</span></span><br><span class="line">    error_page   500 502 503 504 /50x.html;  </span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        root   /root;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#静态文件，nginx自己处理</span></span><br><span class="line">    location ~ ^/(images|javascript|js|css|flash|media|static)/ &#123;</span><br><span class="line">        root /var/www/virtual/htdocs;</span><br><span class="line">        <span class="comment">#过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。</span></span><br><span class="line">        expires 30d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.</span></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root /root;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME /home/www/www<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#设定查看Nginx状态的地址</span></span><br><span class="line">    location /NginxStatus &#123;</span><br><span class="line">        stub_status            on;</span><br><span class="line">        access_log              on;</span><br><span class="line">        auth_basic              <span class="string">"NginxStatus"</span>;</span><br><span class="line">        auth_basic_user_file  conf/htpasswd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#禁止访问 .htxxx 文件</span></span><br><span class="line">    location ~ /\.ht &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="nginx的负载均衡和代理配置"><a href="#nginx的负载均衡和代理配置" class="headerlink" title="nginx的负载均衡和代理配置"></a>nginx的负载均衡和代理配置</h2><h3 id="设定http服务器，利用它的反向代理功能提供负载均衡支持-1"><a href="#设定http服务器，利用它的反向代理功能提供负载均衡支持-1" class="headerlink" title="设定http服务器，利用它的反向代理功能提供负载均衡支持"></a>设定http服务器，利用它的反向代理功能提供负载均衡支持</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"> <span class="comment">#设定mime类型,类型由mime.type文件定义</span></span><br><span class="line">include       /etc/nginx/mime.types;</span><br><span class="line">default_type  application/octet-stream;</span><br><span class="line"><span class="comment">#设定日志格式</span></span><br><span class="line">access_log    /var/<span class="built_in">log</span>/nginx/access.log;</span><br><span class="line"><span class="comment">#省略上文有的一些配置节点</span></span><br><span class="line"><span class="comment">#。。。。。。。。。。</span></span><br><span class="line"><span class="comment">#设定负载均衡的服务器列表</span></span><br><span class="line">upstream mysvr &#123;</span><br><span class="line">    <span class="comment">#weigth参数表示权值，权值越高被分配到的几率越大</span></span><br><span class="line">    server 192.168.8.1x:3128 weight=5;<span class="comment">#本机上的Squid开启3128端口</span></span><br><span class="line">    server 192.168.8.2x:80  weight=1;</span><br><span class="line">    server 192.168.8.3x:80  weight=6;</span><br><span class="line">&#125;</span><br><span class="line">upstream mysvr2 &#123;</span><br><span class="line">    <span class="comment">#weigth参数表示权值，权值越高被分配到的几率越大</span></span><br><span class="line">    server 192.168.8.x:80  weight=1;</span><br><span class="line">    server 192.168.8.x:80  weight=6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第一个虚拟服务器"><a href="#第一个虚拟服务器" class="headerlink" title="第一个虚拟服务器"></a>第一个虚拟服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    <span class="comment">#侦听192.168.8.x的80端口</span></span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  192.168.8.x;</span><br><span class="line">    <span class="comment">#对aspx后缀的进行负载均衡请求</span></span><br><span class="line">    location ~ .*\.aspx$ &#123;</span><br><span class="line">      root   /root;      <span class="comment">#定义服务器的默认网站根目录位置</span></span><br><span class="line">      index index.php index.html index.htm;   <span class="comment">#定义首页索引文件的名称</span></span><br><span class="line">      proxy_pass  http://mysvr ;<span class="comment">#请求转向mysvr 定义的服务器列表</span></span><br><span class="line">      <span class="comment">#以下是一些反向代理的配置.</span></span><br><span class="line">      proxy_redirect off;</span><br><span class="line">      <span class="comment">#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class="line">      proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">      proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">      proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">      client_max_body_size 10m;    <span class="comment">#允许客户端请求的最大单文件字节数</span></span><br><span class="line">      client_body_buffer_size 128k;  <span class="comment">#缓冲区代理缓冲用户端请求的最大字节数，</span></span><br><span class="line">      proxy_connect_timeout 90;  <span class="comment">#nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class="line">      proxy_send_timeout 90;        <span class="comment">#后端服务器数据回传时间(代理发送超时)</span></span><br><span class="line">      proxy_read_timeout 90;         <span class="comment">#连接成功后，后端服务器响应时间(代理接收超时)</span></span><br><span class="line">      proxy_buffer_size 4k;             <span class="comment">#设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span><br><span class="line">      proxy_buffers 4 32k;               <span class="comment">#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span></span><br><span class="line">      proxy_busy_buffers_size 64k;    <span class="comment">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class="line">      proxy_temp_file_write_size 64k;  <span class="comment">#设定缓存文件夹大小，大于这个值，将从upstream服务器传</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;nginx 配置基础解释, 以后可能做一些更新&lt;br&gt;
    
    </summary>
    
      <category term="后端" scheme="http://www.qazhe.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="linux" scheme="http://www.qazhe.com/categories/%E5%90%8E%E7%AB%AF/linux/"/>
    
    
      <category term="nginx" scheme="http://www.qazhe.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>frp</title>
    <link href="http://www.qazhe.com/2018/09/27/frp/"/>
    <id>http://www.qazhe.com/2018/09/27/frp/</id>
    <published>2018-09-27T06:07:00.000Z</published>
    <updated>2018-09-27T06:22:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>frp 的使用及配置<br><a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>frp是中国开发者fatedier的作品，先看介绍<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frp 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持 tcp, udp, http, https 等协议类型，并且 web 服务支持根据域名进行路由转发。</span><br></pre></td></tr></table></figure></p><p>之前一直在路由器上使用ngrok，所以对frp一无所知。做渗透测试，需要NAT穿透，所以一直在找好用的工具，磨刀不误砍柴工。<br>尝试之后发现，frp用法和ngrok相似，但是frp比ngrok更加优秀。<br>配置过程很简单，但是也遇到一些问题，所以把过程记录下来。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>GitHub: <a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a> 下载对应操作系统版本</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="server端-查看帮助"><a href="#server端-查看帮助" class="headerlink" title="server端 查看帮助"></a>server端 查看帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@gorgiaxx:~<span class="comment"># frps -h</span></span><br><span class="line">frps is the server of frp</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">    frps [-c config_file] [-L log_file] [--<span class="built_in">log</span>-level=&lt;log_level&gt;] [--addr=&lt;bind_addr&gt;]</span><br><span class="line">    frps [-c config_file] --reload</span><br><span class="line">    frps -h | --<span class="built_in">help</span></span><br><span class="line">    frps -v | --version</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">    -c config_file            <span class="built_in">set</span> config file</span><br><span class="line">    -L log_file               <span class="built_in">set</span> output <span class="built_in">log</span> file, including console</span><br><span class="line">    --<span class="built_in">log</span>-level=&lt;log_level&gt;   <span class="built_in">set</span> <span class="built_in">log</span> level: debug, info, warn, error</span><br><span class="line">    --addr=&lt;bind_addr&gt;        listen addr <span class="keyword">for</span> client, example: 0.0.0.0:7000</span><br><span class="line">    --reload                  reload ini file and configures <span class="keyword">in</span> common section won<span class="string">'t be changed</span></span><br><span class="line"><span class="string">    -h --help                 show this screen</span></span><br><span class="line"><span class="string">    -v --version              show version</span></span><br></pre></td></tr></table></figure><p>支持读取配置文件，所以我们直接看配置文件。作者给出的配置文件示例已经写的很详细了。所以配置起来非常方便</p><p>配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line"><span class="comment"># 支持IPv6，但是大陆网络情况下几乎不支持。这里填我们的IPv4地址，隧道端口7000</span></span><br><span class="line">bind_addr = 45.32.42.185</span><br><span class="line">bind_port = 7000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个就是http代理的端口，不要和nginx冲突，否则直接闪退。</span></span><br><span class="line">vhost_http_port = 8000</span><br><span class="line">vhost_https_port = 8443</span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制面板的访问端口，在这里我们可以看到隧道的使用情况</span></span><br><span class="line">dashboard_port = 7500</span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制面板访问控制，请修改默认密码</span></span><br><span class="line">dashboard_user = your_name</span><br><span class="line">dashboard_pwd = your_password</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志记录路径，控制面板也能访问</span></span><br><span class="line">log_file = /var/<span class="built_in">log</span>/frps.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志级别，可选debug, info, warn, error。这里只需要warn，免得占空间。</span></span><br><span class="line">log_level = warn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志记录时间，不知道是不是支持自动清理，记录下warn日志就够了，也不需要清理。我觉得没必要记录warn以下的信息，就不管了</span></span><br><span class="line">log_max_days = 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 特权模式，开启之后，支持客户端预配置，也就是不用在服务端单独配置服务，为了示范，我还是下面加一点服务端预配置参数</span></span><br><span class="line">privilege_mode = <span class="literal">true</span></span><br><span class="line">privilege_token = your_privilege_token</span><br><span class="line"></span><br><span class="line"><span class="comment"># 心跳包配置，默认30秒，超时应该就断开连接了</span></span><br><span class="line">heartbeat_timeout = 30</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定端口范围，特权模式下端口是客户端决定的，所以要在服务端做好限制，以免影响正常服务</span></span><br><span class="line">privilege_allow_ports = 2000-3000,3001,3003,4000-50000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最大连接数</span></span><br><span class="line">max_pool_count = 100</span><br><span class="line"></span><br><span class="line"><span class="comment"># 认证超时</span></span><br><span class="line">authentication_timeout = 60</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子域名的根域名，就这样翻译吧</span></span><br><span class="line">subdomain_host = gorgiaxx.me</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个用作metasploit的reverse_tcp穿透，配好token就好</span></span><br><span class="line">[rev]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">auth_token = gorgiaxx</span><br><span class="line">bind_addr = 0.0.0.0</span><br><span class="line"><span class="comment"># ！！！注意，这里一定要看服务商是否把端口过滤了。vultr把4444端口过滤了害我折腾半天。</span></span><br><span class="line">listen_port = 4444</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个来代理web服务，用来传输payload</span></span><br><span class="line">[web]</span><br><span class="line"><span class="comment"># 如果要用http代理，必须至少在前面设定vhost_http_port这个参数。</span></span><br><span class="line"><span class="built_in">type</span> = http</span><br><span class="line">auth_token = gorgiaxx</span><br><span class="line"><span class="comment"># 子域名，最后的访问域名就是frp.gorgiaxx.me</span></span><br><span class="line">subdomain = frp</span><br></pre></td></tr></table></figure></p><h3 id="Client端-查看帮助"><a href="#Client端-查看帮助" class="headerlink" title="Client端 查看帮助"></a>Client端 查看帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">～$ frpc -h</span><br><span class="line">frpc is the client of frp</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">    frpc [-c config_file] [-L log_file] [--<span class="built_in">log</span>-level=&lt;log_level&gt;] [--server-addr=&lt;server_addr&gt;]</span><br><span class="line">    frpc -h | --<span class="built_in">help</span></span><br><span class="line">    frpc -v | --version</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">    -c config_file              <span class="built_in">set</span> config file</span><br><span class="line">    -L log_file                 <span class="built_in">set</span> output <span class="built_in">log</span> file, including console</span><br><span class="line">    --<span class="built_in">log</span>-level=&lt;log_level&gt;     <span class="built_in">set</span> <span class="built_in">log</span> level: debug, info, warn, error</span><br><span class="line">    --server-addr=&lt;server_addr&gt; addr <span class="built_in">which</span> frps is listening <span class="keyword">for</span>, example: 0.0.0.0:7000</span><br><span class="line">    -h --<span class="built_in">help</span>                   show this screen</span><br><span class="line">    --version                   show version</span><br></pre></td></tr></table></figure><p>配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line"><span class="comment"># 服务器端口和地址</span></span><br><span class="line">server_addr = 45.32.42.185</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过http代理访问，一般情况下用不到</span></span><br><span class="line"><span class="comment"># http_proxy = http://user:pwd@192.168.1.128:8080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志路径，客户端访问这个要root权限，后面加sudo运行吧。</span></span><br><span class="line">log_file = /var/<span class="built_in">log</span>/frpc.log</span><br><span class="line">log_level = warn</span><br><span class="line">log_max_days = 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务指定给用户的token</span></span><br><span class="line">auth_token = gorgiaxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 特权的token</span></span><br><span class="line">privilege_token = your_token</span><br><span class="line"></span><br><span class="line">[rev]</span><br><span class="line"><span class="comment"># tcp | http, default is tcp</span></span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 4444</span><br><span class="line"><span class="comment"># 加密通信，暂时不需要</span></span><br><span class="line">use_encryption = <span class="literal">false</span></span><br><span class="line"><span class="comment"># 不是http的情况下，gzip压缩也不要</span></span><br><span class="line">use_gzip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">[pre_rev]</span><br><span class="line"><span class="comment"># 预配置</span></span><br><span class="line">privilege_mode = <span class="literal">true</span></span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 0.0.0.0</span><br><span class="line">local_port = 5555</span><br><span class="line"><span class="comment"># 远程端口</span></span><br><span class="line">remote_port = 5555</span><br><span class="line"></span><br><span class="line">[web]</span><br><span class="line"><span class="built_in">type</span> = http</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 8080</span><br><span class="line">use_gzip = <span class="literal">true</span></span><br><span class="line">pool_count = 20</span><br><span class="line"><span class="comment"># 可以设定访问控制</span></span><br><span class="line"><span class="comment"># http_user = admin</span></span><br><span class="line"><span class="comment"># http_pwd = admin</span></span><br><span class="line"><span class="comment"># 子域名，最后就是frp.gorgiaxx.me</span></span><br><span class="line">subdomain = frp</span><br></pre></td></tr></table></figure></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>frp权限控制做的比较好，不怕端口暴露在公网。所以可以放心常驻后台</p><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup frps -c /etc/frps.ini &amp;</span><br></pre></td></tr></table></figure><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup frps -c /etc/frps.ini &amp;</span><br></pre></td></tr></table></figure><h3 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h3><p>直接浏览器访问 <a href="http://gorgiaxx.me:7500/" target="_blank" rel="noopener">http://gorgiaxx.me:7500/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;frp 的使用及配置&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MySQL 8.0 在Windows zip 安装过程</title>
    <link href="http://www.qazhe.com/2018/07/26/mysql8-install/"/>
    <id>http://www.qazhe.com/2018/07/26/mysql8-install/</id>
    <published>2018-07-26T04:45:40.000Z</published>
    <updated>2018-07-26T10:20:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>mysql发布最新的8.0版本今天我们在Windows上面安装<br><a id="more"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载地址社区版: <a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></p><h3 id="解压zip包到安装目录"><a href="#解压zip包到安装目录" class="headerlink" title="解压zip包到安装目录"></a>解压zip包到安装目录</h3><p>比如我的安装目录是：D:\mysql-8.0.11-winx64</p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>在Windows系统中，配置文件默认是安装目录下的 my.ini 文件，部分配置需要在初始安装时配置，大部分也可以在安装完成后进行更改。当然，极端情况下，所有的都是可以更改的。<br>在安装根目录下添加 my.ini，比如我这里是：D:\mysql-8.0.11-winx64\my.ini，写入基本配置：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="line"><span class="comment"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span></span><br><span class="line"><span class="comment"># innodb_buffer_pool_size = 128M</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="line"><span class="comment"># changes to the binary log between backups.</span></span><br><span class="line"><span class="comment"># log_bin</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># These are commonly set, remove the # and set as required.</span></span><br><span class="line"><span class="attr">basedir</span> = D:\mysql-<span class="number">8.0</span>.<span class="number">11</span>-winx64</span><br><span class="line"><span class="attr">datadir</span> = D:\mysql-<span class="number">8.0</span>.<span class="number">11</span>-winx64</span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span></span><br><span class="line"><span class="comment"># server_id = .....</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="line"><span class="comment"># The server defaults are faster for transactions and fast SELECTs.</span></span><br><span class="line"><span class="comment"># Adjust sizes as needed, experiment to find the optimal values.</span></span><br><span class="line"><span class="comment"># join_buffer_size = 128M</span></span><br><span class="line"><span class="comment"># sort_buffer_size = 2M</span></span><br><span class="line"><span class="comment"># read_rnd_buffer_size = 2M </span></span><br><span class="line"> </span><br><span class="line"><span class="attr">sql_mode</span>=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES </span><br><span class="line"> </span><br><span class="line"><span class="attr">character-set-server</span> = utf8mb4</span><br><span class="line"> </span><br><span class="line"><span class="attr">performance_schema_max_table_instances</span> = <span class="number">600</span></span><br><span class="line"><span class="attr">table_definition_cache</span> = <span class="number">400</span></span><br><span class="line"><span class="attr">table_open_cache</span> = <span class="number">256</span></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8mb4</span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8mb4</span><br></pre></td></tr></table></figure><p>注意，里面的 basedir 是我本地的安装目录，datadir 是我数据库数据文件要存放的位置，各项配置需要根据自己的环境进行配置。</p><p>查看所有的配置项，可参考：<a href="https://dev.mysql.com/doc/refman/8.0/en/mysqld-option-tables.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/8.0/en/mysqld-option-tables.html</a></p><h2 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h2><p>在MySQL安装目录的 bin 目录下执行命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --console</span><br></pre></td></tr></table></figure></p><p>执行完成后，会打印 root 用户的初始默认密码，比如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2018-04-20T02:35:01.507037Z 0 [Warning] [MY-010915] [Server] <span class="string">'NO_ZERO_DATE'</span>, <span class="string">'NO_ZERO_IN_DATE'</span> and <span class="string">'ERROR_FOR_DIVISION_BY_ZERO'</span> sql modes should be used with strict mode. They will be merged with strict mode <span class="keyword">in</span> a future release.</span><br><span class="line">2018-04-20T02:35:01.507640Z 0 [System] [MY-013169] [Server] D:\Program\MySQL8\bin\mysqld.exe (mysqld 8.0.11) initializing of server <span class="keyword">in</span> progress as process 11064</span><br><span class="line">2018-04-20T02:35:01.508173Z 0 [ERROR] [MY-010340] [Server] Error message file <span class="string">'D:\Program\MySQL\share\english\errmsg.sys'</span> had only 1090 error messages, but it should contain at least 4512 error messages. Check that the above file is the right version <span class="keyword">for</span> this program!</span><br><span class="line">2018-04-20T02:35:05.464644Z 5 [Note] [MY-010454] [Server] A temporary password is generated <span class="keyword">for</span> root@localhost: APWCY5ws&amp;hjQ</span><br></pre></td></tr></table></figure></p><p>其中，第4行的“APWCY5ws&amp;hjQ”就是初始密码，在没有更改密码前，需要记住这个密码，后续登录需要用到。<br>要是你手贱，关快了，或者没记住，那也没事，删掉初始化的 datadir 目录，再执行一遍初始化命令，又会重新生成的。当然，也可以使用安全工具，强制改密码，用什么方法，自己随意。</p><p>参考：<a href="https://dev.mysql.com/doc/refman/8.0/en/data-directory-initialization-mysqld.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/8.0/en/data-directory-initialization-mysqld.html</a></p><h2 id="安装服务"><a href="#安装服务" class="headerlink" title="安装服务"></a>安装服务</h2><p>在MySQL安装目录的 bin 目录下执行命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">mysqld --install [服务名]</span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">mysqld --remove [服务名]</span><br></pre></td></tr></table></figure></p><p>后面的服务名可以不写，默认的名字为 mysql。当然，如果你的电脑上需要安装多个MySQL服务，就可以用不同的名字区分了，比如 mysql5 和 mysql8。<br>安装完成之后，就可以通过命令net start mysql启动MySQL的服务了。</p><p>参考：<a href="https://dev.mysql.com/doc/refman/8.0/en/windows-start-service.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/8.0/en/windows-start-service.html</a></p><h2 id="更改密码和密码认证插件"><a href="#更改密码和密码认证插件" class="headerlink" title="更改密码和密码认证插件"></a>更改密码和密码认证插件</h2><p>在MySQL安装目录的 bin 目录下执行命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure></p><p>这时候会提示输入密码，记住了第3步的密码，填入即可登录成功，进入MySQL命令模式。<br>在MySQL8.0.4以前，执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET PASSWORD=PASSWORD(<span class="string">'[修改的密码]'</span>);</span><br></pre></td></tr></table></figure></p><p>就可以更改密码，但是MySQL8.0.4开始，这样默认是不行的。因为之前，MySQL的密码认证插件是“mysql_native_password”，而现在使用的是“caching_sha2_password”。</p><p>因为当前有很多数据库工具和链接包都不支持“caching_sha2_password”，为了方便，我暂时还是改回了“mysql_native_password”认证插件。</p><p>在MySQL中执行命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'password'</span>;</span><br></pre></td></tr></table></figure></p><p>修改密码验证插件，同时修改密码。</p><p>如果想默认使用“mysql_native_password”插件认证，可以在配置文件中配置default_authentication_plugin项。<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">default_authentication_plugin</span>=mysql_native_password</span><br></pre></td></tr></table></figure></p><p>附、CentOS tar.gz 包安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">wget https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line">shell&gt; tar zxvf mysql-8.0.11-linux-glibc2.12-x86_64.tar.gz -C /usr/<span class="built_in">local</span>/</span><br><span class="line">shell&gt; groupadd mysql</span><br><span class="line">shell&gt; useradd -r -g mysql -s /bin/<span class="literal">false</span> mysql</span><br><span class="line">shell&gt; <span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">shell&gt; ln -s mysql-8.0.11-linux-glibc2.12-x86_64 mysql</span><br><span class="line">shell&gt; <span class="built_in">cd</span> mysql</span><br><span class="line">shell&gt; mkdir mysql-files</span><br><span class="line">shell&gt; chown mysql:mysql mysql-files</span><br><span class="line">shell&gt; chmod 750 mysql-files</span><br><span class="line">shell&gt; bin/mysqld --initialize --user=mysql</span><br><span class="line">shell&gt; bin/mysql_ssl_rsa_setup</span><br><span class="line">shell&gt; bin/mysqld_safe --user=mysql &amp;</span><br><span class="line"><span class="comment"># Next command is optional</span></span><br><span class="line">shell&gt; cp support-files/mysql.server /etc/init.d/mysql.server</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql发布最新的8.0版本今天我们在Windows上面安装&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://www.qazhe.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://www.qazhe.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>phpstorm增加swoole自动提示</title>
    <link href="http://www.qazhe.com/2018/07/02/phpstorm%E5%A2%9E%E5%8A%A0swoole%E8%87%AA%E5%8A%A8%E6%8F%90%E7%A4%BA/"/>
    <id>http://www.qazhe.com/2018/07/02/phpstorm增加swoole自动提示/</id>
    <published>2018-07-02T09:58:05.000Z</published>
    <updated>2018-07-02T10:08:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>phpstorm增加swoole自动提示<br><a id="more"></a></p><h3 id="下载swoole-ide-helper-en"><a href="#下载swoole-ide-helper-en" class="headerlink" title="下载swoole-ide-helper-en"></a>下载swoole-ide-helper-en</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/eaglewu/swoole-ide-helper.git</span><br></pre></td></tr></table></figure><h3 id="打开PHPStorm"><a href="#打开PHPStorm" class="headerlink" title="打开PHPStorm"></a>打开PHPStorm</h3><p><img src="https://img-blog.csdn.net/20170928233308966?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGNxaW5nZmVuZw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="此处输入图片的描述"></p><h3 id="右键External-Libraries，选择Configure-PHP-Include-Path"><a href="#右键External-Libraries，选择Configure-PHP-Include-Path" class="headerlink" title="右键External Libraries，选择Configure PHP Include Path"></a>右键External Libraries，选择Configure PHP Include Path</h3><p><img src="https://img-blog.csdn.net/20170928233609955?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGNxaW5nZmVuZw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="此处输入图片的描述"></p><p>选择下载好的swoole-ide-helper目录，点击确定。<br>然后就会发现代码中swoole相关方法函数不再反白了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;phpstorm增加swoole自动提示&lt;br&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://www.qazhe.com/tags/php/"/>
    
      <category term="swoole" scheme="http://www.qazhe.com/tags/swoole/"/>
    
      <category term="phpstorm" scheme="http://www.qazhe.com/tags/phpstorm/"/>
    
  </entry>
  
  <entry>
    <title>hexo 如何添加和发表文章</title>
    <link href="http://www.qazhe.com/2018/06/24/hexo%20%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%92%8C%E5%8F%91%E8%A1%A8%E6%96%87%E7%AB%A0/"/>
    <id>http://www.qazhe.com/2018/06/24/hexo 如何添加和发表文章/</id>
    <published>2018-06-24T06:32:46.000Z</published>
    <updated>2018-09-27T07:29:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>如何在hexo发布一篇文章<br><a id="more"></a><br>1.本地写文章<br>选中你的Blog文件夹(我这里选择的是我自己重命名过的),鼠标右键单击，选择Git Bash Here<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fn7sob24o7j30b00ajt9k.jpg" alt="此处输入图片的描述"></p><p>1.1 新建文章<br>输入指令hexo new XXX 如下图xxx为文章标题，根据自己情况写。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7srydq0fj30cv01nq2t.jpg" alt="此处输入图片的描述"></p><p>完成后会提示 在…/Blog/source/_post/目录下创建了xxx.md</p><p>1.2 写文章<br>我们根据提示的目录，找到这个文件，然后使用编辑器打开。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7sx0jdg7j30h8057gma.jpg" alt="此处输入图片的描述"></p><p>我这里使用的是Sublime,你可以使用自己喜欢的编辑器。<br>打开后如图所示，可以开始写文章了,写完后请Ctrl+S保存。<br><img src="https://ws1.sinaimg.cn/mw690/005vwoCyly1fn7sz7kug4j30v80i4tc4.jpg" alt="此处输入图片的描述"></p><p>关于Markdown可以看我这篇文章<a href="https://mapan.tech/posts/b33e.html" target="_blank" rel="noopener">Markdown语法和MD编辑器</a></p><p>1.3如何在文章插入图片？<br>可以看我这篇文章 <a href="https://mapan.tech/posts/c9c3.html" target="_blank" rel="noopener">使Hexo文章图文并茂</a></p><p>2.本地预览 (非必要，可选)<br>在编辑文章过程中，我们肯定不想频繁的部署，查看效果。这时候使用hexo s指令进行本地预览，文章编辑完成，且自己满意后，再进行部署。<br>提示INFO Hexo is running at <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>. Press Ctrl+C to stop.<br>这句信息含义是“网站已经运行在本地 <a href="http://locahost:4000/" target="_blank" rel="noopener">http://locahost:4000/</a> ,按Ctrl+C可以停止预览”。<br>我们不要按Ctrl+C，现在直接浏览器打开 <a href="http://locahost:4000/" target="_blank" rel="noopener">http://locahost:4000/</a> 即可看到预览效果。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7tv4nqsoj30fw09zgmi.jpg" alt="此处输入图片的描述"></p><p>3.渲染并部署网站<br>3.1 hexo g渲染生成网站<br>现在我们文章已经写好，预览也比较满意。现在可以Ctrl+C停止预览，然后hexo g渲染出整套网站代码(你可以在../Blog/public/文件夹下看到整套网站的代码)。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7t2ivla5j30g705ijrj.jpg" alt="此处输入图片的描述"></p><p>渲染完成后，info提示信息:使用2.01秒生成了74个文件,这表示完成了渲染。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7t59khztj30g609bglx.jpg" alt="此处输入图片的描述"></p><p>3.2 hexo d部署网站(把渲染好的html等网站文件，上传到Coding服务器)<br>如图，除了黄色框框内的信息或许没有，其他都应该有。<br><img src="https://ws1.sinaimg.cn/large/005vwoCyly1fn7tdc765xj30g40h3ab4.jpg" alt="此处输入图片的描述"></p><p>最后一句INFO Deploy done: git表示部署已完成。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何在hexo发布一篇文章&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.qazhe.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.qazhe.com/tags/hexo/"/>
    
  </entry>
  
</feed>
